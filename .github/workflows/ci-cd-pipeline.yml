name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - testing
      - prod

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/testing'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/

  docker_build_and_push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/testing'
    needs: unit_tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Check Docker login
        run: |
          docker info
        

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-api:latest .
      
      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/weather-api:latest
        
  
  cd_pipeline:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/prod'
    needs: docker_build_and_push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Pull Docker image from DockerHub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/weather-api:latest

      - name: Start Minikube
        run: |
          minikube start --driver=docker

      - name: Set up kubectl
        run: |
          kubectl config use-context minikube

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/deployment.yaml

